<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.feiyi.resource.mapper.MusicMapper">
    
    <resultMap type="Music" id="MusicResult">
        <result property="id"    column="id"    />
        <result property="title"    column="title"    />
        <result property="musicUrl"    column="music_url"    />
        <result property="status"    column="status"    />
        <result property="createdAt"    column="created_at"    />
        <result property="updatedAt"    column="updated_at"    />
        <result property="createdBy"    column="created_by"    />
        <result property="updatedBy"    column="updated_by"    />
        <result property="delFlag"    column="del_flag"    />
        <result property="deletedAt"    column="deleted_at"    />
        <result property="deletedBy"    column="deleted_by"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectMusicVo">
        select id, title, music_url, status, created_at, updated_at, created_by, updated_by, del_flag, deleted_at, deleted_by, remark from music
    </sql>

    <select id="selectMusicList" parameterType="Music" resultMap="MusicResult">
        <include refid="selectMusicVo"/>
        <where>  
            <if test="title != null  and title != ''"> and title like concat('%', #{title}, '%')</if>
            <if test="musicUrl != null  and musicUrl != ''"> and music_url like concat('%', #{musicUrl}, '%')</if>
            <if test="status != null "> and status = #{status}</if>
            <if test="updatedAt != null "> and updated_at = #{updatedAt}</if>
        </where>
    </select>
    
    <select id="selectMusicById" parameterType="Long" resultMap="MusicResult">
        <include refid="selectMusicVo"/>
        where id = #{id}
    </select>

    <insert id="insertMusic" parameterType="Music" useGeneratedKeys="true" keyProperty="id">
        insert into music
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="title != null and title != ''">title,</if>
            <if test="musicUrl != null and musicUrl != ''">music_url,</if>
            <if test="status != null">status,</if>
            <if test="createdAt != null">created_at,</if>
            <if test="updatedAt != null">updated_at,</if>
            <if test="createdBy != null">created_by,</if>
            <if test="updatedBy != null">updated_by,</if>
            <if test="delFlag != null">del_flag,</if>
            <if test="deletedAt != null">deleted_at,</if>
            <if test="deletedBy != null">deleted_by,</if>
            <if test="remark != null and remark != ''">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="title != null and title != ''">#{title},</if>
            <if test="musicUrl != null and musicUrl != ''">#{musicUrl},</if>
            <if test="status != null">#{status},</if>
            <if test="createdAt != null">#{createdAt},</if>
            <if test="updatedAt != null">#{updatedAt},</if>
            <if test="createdBy != null">#{createdBy},</if>
            <if test="updatedBy != null">#{updatedBy},</if>
            <if test="delFlag != null">#{delFlag},</if>
            <if test="deletedAt != null">#{deletedAt},</if>
            <if test="deletedBy != null">#{deletedBy},</if>
            <if test="remark != null and remark != ''">#{remark},</if>
         </trim>
    </insert>

    <update id="updateMusic" parameterType="Music">
        update music
        <trim prefix="SET" suffixOverrides=",">
            <if test="title != null and title != ''">title = #{title},</if>
            <if test="musicUrl != null and musicUrl != ''">music_url = #{musicUrl},</if>
            <if test="status != null">status = #{status},</if>
            <if test="createdAt != null">created_at = #{createdAt},</if>
            <if test="updatedAt != null">updated_at = #{updatedAt},</if>
            <if test="createdBy != null">created_by = #{createdBy},</if>
            <if test="updatedBy != null">updated_by = #{updatedBy},</if>
            <if test="delFlag != null">del_flag = #{delFlag},</if>
            <if test="deletedAt != null">deleted_at = #{deletedAt},</if>
            <if test="deletedBy != null">deleted_by = #{deletedBy},</if>
            <if test="remark != null and remark != ''">remark = #{remark},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteMusicById" parameterType="Long">
        delete from music where id = #{id}
    </delete>

    <delete id="deleteMusicByIds" parameterType="String">
        delete from music where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>